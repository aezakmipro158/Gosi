<?php
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ 2025-05-19 18:03:45 UTC
$botToken = '7828567561:AAEc2dNQcaw2MNtsnGAGdf3XofiJXTMyoh4';

// ID —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –≥—Ä—É–ø–ø
$allowedGroupChats = [
    '-4966154005',  // –ü–µ—Ä–≤–∞—è —Ü–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞
    '-4774197633',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4960955475',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã   
    '-1002639922721',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4889030704',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4657876510',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4940650117',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4831517390',   // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤—Ç–æ—Ä–æ–π –≥—Ä—É–ø–ø—ã
    '-4642408856'    // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ç—Ä–µ—Ç—å–µ–π –≥—Ä—É–ø–ø—ã
];

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞ (username –±–µ–∑ @)
$adminUsers = [
    'mol_25411',    // –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    'RUeSimSupport'  // –í—Ç–æ—Ä–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
];

// –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
$qrFile = 'stored_qr.json';
$logFile = 'bot_log.txt';
$statusFile = 'bot_status.json';
$queueFile = 'qr_queue.json';
$adminsFile = 'admin_chats.json';

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ QR –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å
$maxQrPerRequest = 10;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Telegram
function makeRequest($method, $params = []) {
    global $botToken;
    $url = "https://api.telegram.org/bot{$botToken}/{$method}";
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $params);
    
    $result = curl_exec($ch);
    curl_close($ch);
    
    return json_decode($result, true);
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function isAdmin($username) {
    global $adminUsers;
    return in_array($username, $adminUsers);
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function saveAdminChatId($username, $chatId) {
    global $adminsFile;
    
    $adminChats = [];
    if (file_exists($adminsFile)) {
        $adminChats = json_decode(file_get_contents($adminsFile), true);
    }
    
    $adminChats[$username] = $chatId;
    file_put_contents($adminsFile, json_encode($adminChats, JSON_PRETTY_PRINT));
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
function getAdminChatIds() {
    global $adminsFile;
    
    if (!file_exists($adminsFile)) {
        return [];
    }
    
    return json_decode(file_get_contents($adminsFile), true);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã
function getBotStatus($chatId) {
    global $statusFile;
    
    if (!file_exists($statusFile)) {
        $initial_status = [];
        foreach ($GLOBALS['allowedGroupChats'] as $groupId) {
            $initial_status[$groupId] = true;
        }
        file_put_contents($statusFile, json_encode($initial_status, JSON_PRETTY_PRINT));
        return true;
    }
    
    $status = json_decode(file_get_contents($statusFile), true);
    return isset($status[$chatId]) ? $status[$chatId] : true;
}

// –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã
function setBotStatus($chatId, $enabled) {
    global $statusFile;
    
    $status = [];
    if (file_exists($statusFile)) {
        $status = json_decode(file_get_contents($statusFile), true);
    }
    
    $status[$chatId] = $enabled;
    file_put_contents($statusFile, json_encode($status, JSON_PRETTY_PRINT));
    
    $message = $enabled 
        ? "üü¢ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –ú–¢–°."
        : "üî¥ –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n–ö–æ–º–∞–Ω–¥–∞ –ú–¢–° –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.";
    
    makeRequest('sendMessage', [
        'chat_id' => $chatId,
        'text' => $message
    ]);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö QR
function getStoredQR() {
    global $qrFile;
    
    if (!file_exists($qrFile)) {
        $initial_data = [
            'qr_list' => [],
            'last_update' => date('Y-m-d H:i:s')
        ];
        file_put_contents($qrFile, json_encode($initial_data, JSON_PRETTY_PRINT));
        return $initial_data;
    }
    
    return json_decode(file_get_contents($qrFile), true);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—á–µ—Ä–µ–¥–∏
function getQueueInfo() {
    global $queueFile;
    
    if (!file_exists($queueFile)) {
        $initial_queue = [
            'pending_count' => 0,
            'last_notified' => 0,
            'last_update' => date('Y-m-d H:i:s')
        ];
        file_put_contents($queueFile, json_encode($initial_queue, JSON_PRETTY_PRINT));
        return $initial_queue;
    }
    
    return json_decode(file_get_contents($queueFile), true);
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—á–µ—Ä–µ–¥–∏
function updateQueueInfo($newCount) {
    global $queueFile;
    
    $queue = getQueueInfo();
    $queue['pending_count'] = $newCount;
    $queue['last_update'] = date('Y-m-d H:i:s');
    
    file_put_contents($queueFile, json_encode($queue, JSON_PRETTY_PRINT));
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç–∏ QR
function isValidQR($qr) {
    return (isset($qr['photo']) && !empty($qr['photo'])) || 
           (isset($qr['text']) && !empty(trim($qr['text'])));
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —á–∞—Ç
function isAllowedChat($chatId, $chatType) {
    global $allowedGroupChats;
    return ($chatType === 'group' || $chatType === 'supergroup') && in_array($chatId, $allowedGroupChats);
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ QR
function storeQR($qr) {
    global $qrFile, $adminUsers;
    
    if (!isValidQR($qr)) {
        return false;
    }
    
    $data = getStoredQR();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (isset($qr['photo']) && isset($qr['photo'][0]['file_id']) && strpos($qr['photo'][0]['file_id'], 'uploads/') === 0) {
        $filePath = $qr['photo'][0]['file_id'];
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –≤ Telegram
        $photo = new CURLFile($filePath);
        $response = makeRequest('sendPhoto', [
            'chat_id' => $adminUsers[0], // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–º—É –∞–¥–º–∏–Ω—É
            'photo' => $photo
        ]);
        
        if ($response['ok']) {
            // –ü–æ–ª—É—á–∞–µ–º file_id –æ—Ç Telegram
            $qr['photo'] = $response['result']['photo'];
            // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
            unlink($filePath);
        } else {
            return false;
        }
    }
    
    $qr['stored_at'] = date('Y-m-d H:i:s');
    $qr['is_forwarded'] = isset($qr['forward_date']);
    $qr['stored_by'] = $qr['from']['username'] ?? 'unknown';
    
    $data['qr_list'][] = $qr;
    $data['last_update'] = date('Y-m-d H:i:s');
    
    file_put_contents($qrFile, json_encode($data, JSON_PRETTY_PRINT));
    
    updateQueueInfo(count($data['qr_list']));
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–æ –≤—Å–µ –≥—Ä—É–ø–ø—ã
function notifyAllGroups($count) {
    global $allowedGroupChats;
    
    $message = "üì¢ *–°–ø–∏—Å–æ–∫ QR –ø–æ–ø–æ–ª–Ω–µ–Ω!*\n".
              "üì• –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö QR: *{$count}*\n\n".
              "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `–º—Ç—Å` —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å QR.";
    
    foreach ($allowedGroupChats as $chatId) {
        if (getBotStatus($chatId)) {
            makeRequest('sendMessage', [
                'chat_id' => $chatId,
                'text' => $message,
                'parse_mode' => 'Markdown'
            ]);
            usleep(500000);
        }
    }
    
    $queue = getQueueInfo();
    $queue['last_notified'] = $queue['pending_count'];
    file_put_contents($queueFile, json_encode($queue, JSON_PRETTY_PRINT));
}

// –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
function notifyAdmins($requestChatId) {
    $chatInfo = makeRequest('getChat', ['chat_id' => $requestChatId]);
    $chatTitle = $chatInfo['result']['title'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞';
    
    $message = "üì® *–ó–∞–ø—Ä–æ—Å –Ω–æ–≤—ã—Ö QR!*\n".
               "üì± –ì—Ä—É–ø–ø–∞: *{$chatTitle}*\n".
               "üïí –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: " . date('Y-m-d H:i:s') . " UTC\n\n".
               "–ö–ª–∏–µ–Ω—Ç—ã –æ–∂–∏–¥–∞—é—Ç –Ω–æ–≤—ã–µ QR!";
    
    $adminChats = getAdminChatIds();
    if (empty($adminChats)) {
        return false;
    }
    
    foreach ($adminChats as $chatId) {
        makeRequest('sendMessage', [
            'chat_id' => $chatId,
            'text' => $message,
            'parse_mode' => 'Markdown'
        ]);
        usleep(500000);
    }
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ QR –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏ —É–¥–∞–ª–µ–Ω–∏—è –µ–≥–æ –∏–∑ –±–∞–∑—ã
function markQRAsSent($messageId) {
    global $qrFile;
    
    $data = getStoredQR();
    
    // –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π QR –∏–∑ —Å–ø–∏—Å–∫–∞
    foreach ($data['qr_list'] as $key => $qr) {
        if ($qr['message_id'] == $messageId) {
            unset($data['qr_list'][$key]);
            
            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
            $sent_log = [];
            if (file_exists('sent_log.json')) {
                $sent_log = json_decode(file_get_contents('sent_log.json'), true);
            }
            
            if (!isset($sent_log['entries'])) {
                $sent_log['entries'] = [];
            }
            
            $sent_log['entries'][] = [
                'message_id' => $messageId,
                'timestamp' => date('Y-m-d H:i:s')
            ];
            
            file_put_contents('sent_log.json', json_encode($sent_log, JSON_PRETTY_PRINT));
            break;
        }
    }
    
    // –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤
    $data['qr_list'] = array_values($data['qr_list']);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    $data['last_update'] = date('Y-m-d H:i:s');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    file_put_contents($qrFile, json_encode($data, JSON_PRETTY_PRINT));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—á–µ—Ä–µ–¥–∏
    updateQueueInfo(count($data['qr_list']));
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –±—ã–ª –ª–∏ QR –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
function isQRSent($messageId) {
    $data = getStoredQR();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ QR –≤ —Å–ø–∏—Å–∫–µ
    foreach ($data['qr_list'] as $qr) {
        if ($qr['message_id'] == $messageId) {
            return false; // QR –≤—Å—ë –µ—â—ë –≤ —Å–ø–∏—Å–∫–µ
        }
    }
    
    return true; // QR –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ, –∑–Ω–∞—á–∏—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö QR
function forwardStoredQR($chatId, $count) {
    if (!getBotStatus($chatId)) {
        makeRequest('sendMessage', [
            'chat_id' => $chatId,
            'text' => "‚ö†Ô∏è –ë–æ—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        ]);
        return;
    }
    
    global $maxQrPerRequest;
    $count = min($count, $maxQrPerRequest);
    $data = getStoredQR();
    $forwardedCount = 0;
    
    $qrList = array_reverse($data['qr_list']);
    
    foreach ($qrList as $qr) {
        if (!isQRSent($qr['message_id'])) {
            if (isset($qr['text']) && !isset($qr['photo'])) {
                $params = [
                    'chat_id' => $chatId,
                    'text' => $qr['text']
                ];
                $result = makeRequest('sendMessage', $params);
            } else {
                $params = [
                    'chat_id' => $chatId,
                    'from_chat_id' => $qr['chat']['id'],
                    'message_id' => $qr['message_id']
                ];
                $result = makeRequest('forwardMessage', $params);
            }
            
            if ($result['ok']) {
                markQRAsSent($qr['message_id']);
                $forwardedCount++;
                
                usleep(500000);
                
                if ($forwardedCount >= $count) {
                    break;
                }
            }
        }
    }
    
    if ($forwardedCount > 0) {
        $messageText = "‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ QR: $forwardedCount" . 
                      ($forwardedCount < $count ? "\nüìù –ë–æ–ª—å—à–µ –Ω–æ–≤—ã—Ö QR –Ω–µ—Ç." : "");
        makeRequest('sendMessage', [
            'chat_id' => $chatId,
            'text' => $messageText
        ]);
    } else {
        $keyboard = [
            'inline_keyboard' => [[
                [
                    'text' => 'üîî –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–µ QR',
                    'callback_data' => 'request_new_qr'
                ]
            ]]
        ];
        
        makeRequest('sendMessage', [
            'chat_id' => $chatId,
            'text' => "‚ÑπÔ∏è –ù–æ–≤—ã—Ö QR –ø–æ–∫–∞ –Ω–µ—Ç, –Ω–æ –º—ã —É–∂–µ –≥–æ—Ç–æ–≤–∏–º –∏—Ö\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–ø—Ä–æ—Å–µ.",
            'reply_markup' => json_encode($keyboard)
        ]);
    }
    
    updateQueueInfo(count($data['qr_list']));
}

// –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
$update = json_decode(file_get_contents('php://input'), true);

if (isset($update['message']) || isset($update['callback_query'])) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É)
    if (isset($update['callback_query'])) {
        $callback = $update['callback_query'];
        $username = $callback['from']['username'] ?? '';
        $chatId = $callback['message']['chat']['id'];
        
        if ($callback['data'] === 'notify_new_qr' && isAdmin($username)) {
            $queue = getQueueInfo();
            $pendingCount = $queue['pending_count'] - $queue['last_notified'];
            
            if ($pendingCount > 0) {
                notifyAllGroups($pendingCount);
                makeRequest('answerCallbackQuery', [
                    'callback_query_id' => $callback['id'],
                    'text' => "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤–æ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä—É–ø–ø—ã"
                ]);
            } else {
                makeRequest('answerCallbackQuery', [
                    'callback_query_id' => $callback['id'],
                    'text' => "‚ùå –ù–µ—Ç –Ω–æ–≤—ã—Ö QR –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                ]);
            }
        }
        elseif ($callback['data'] === 'request_new_qr') {
            if (notifyAdmins($chatId)) {
                makeRequest('answerCallbackQuery', [
                    'callback_query_id' => $callback['id'],
                    'text' => "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ"
                ]);
                
                makeRequest('editMessageText', [
                    'chat_id' => $chatId,
                    'message_id' => $callback['message']['message_id'],
                    'text' => "‚ÑπÔ∏è –ù–æ–≤—ã—Ö QR –ø–æ–∫–∞ –Ω–µ—Ç, –Ω–æ –º—ã —É–∂–µ –≥–æ—Ç–æ–≤–∏–º –∏—Ö\n\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ."
                ]);
            } else {
                makeRequest('answerCallbackQuery', [
                    'callback_query_id' => $callback['id'],
                    'text' => "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    'show_alert' => true
                ]);
            }
        }
        exit;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    $message = $update['message'];
    $chatId = $message['chat']['id'];
    $chatType = $message['chat']['type'];
    $username = $message['from']['username'] ?? '';
    $text = $message['text'] ?? '';
    
    if (isAdmin($username)) {
        if ($chatType === 'private') {
            saveAdminChatId($username, $chatId);
            
            if (isset($message['forward_date']) || isset($message['photo']) || isset($message['text'])) {
                if (storeQR($message)) {
                    $keyboard = [
                        'inline_keyboard' => [[
                            [
                                'text' => 'üì¢ –£–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ –≥—Ä—É–ø–ø—ã –æ –Ω–æ–≤—ã—Ö QR',
                                'callback_data' => 'notify_new_qr'
                            ]
                        ]]
                    ];
                    
                    makeRequest('sendMessage', [
                        'chat_id' => $chatId,
                        'text' => "‚úÖ QR –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É.",
                        'reply_markup' => json_encode($keyboard)
                    ]);
                } else {
                    makeRequest('sendMessage', [
                        'chat_id' => $chatId,
                        'text' => "‚ùå QR –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç."
                    ]);
                }
                exit;
            }
        }
        elseif (isAllowedChat($chatId, $chatType)) {
            if (preg_match('/^\/bot_(on|off)$/i', $text, $matches)) {
                $command = strtolower($matches[1]);
                setBotStatus($chatId, $command === 'on');
                exit;
            }
        }
    }
    
    if (!isAllowedChat($chatId, $chatType)) {
        if ($chatType === 'private' && !isAdmin($username)) {
            makeRequest('sendMessage', [
                'chat_id' => $chatId,
                'text' => '‚ö†Ô∏è –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.'
            ]);
        }
        exit;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–º—Ç—Å"
    if (preg_match('/^–º—Ç—Å(?:\s+(\d+))?$/iu', $text, $matches)) {
        $count = isset($matches[1]) ? (int)$matches[1] : 1;
        
        if ($count > $maxQrPerRequest) {
            makeRequest('sendMessage', [
                'chat_id' => $chatId,
                'text' => "‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ QR –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å: $maxQrPerRequest"
            ]);
            $count = $maxQrPerRequest;
        }
        
        forwardStoredQR($chatId, $count);
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
$logMessage = date('Y-m-d H:i:s') . " - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $username, –ß–∞—Ç: $chatId, –¢–∏–ø: $chatType\n";
file_put_contents($logFile, $logMessage, FILE_APPEND);
?>